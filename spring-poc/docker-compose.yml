version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - spring-poc-mysql
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    networks:
      - spring-poc-mysql
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    networks:
      - spring-poc-mysql
    ports: 
     - 9999:8080
    environment: 
     - KEYCLOAK_ADMIN= admin
     - KEYCLOAK_ADMIN_PASSWORD= password
    volumes: 
     - F:\\data\\keycloak\\keycloak-data:/opt/keycloak/data/h2
    command: ["start-dev"]
    
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    networks:
      - spring-poc-mysql
    ports:
     - 9411:9411
   
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    networks:
      - spring-poc-mysql
    ports:
      - "3307:3306"  
    environment:
     - MYSQL_ROOT_PASSWORD=mysqlroot
     - MYSQL_DATABASE=spring_poc
    volumes:
      - ./create_database.sql:/docker-entrypoint-initdb.d/create_database.sql
    healthcheck:
      test: "/usr/bin/mysql --user=root --password= --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 2s
      retries: 100 

networks:
  spring-poc-mysql:
    driver: bridge  